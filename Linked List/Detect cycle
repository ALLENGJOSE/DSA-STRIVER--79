Brute Force:
public class Solution {
    public boolean hasCycle(ListNode head) {
        
    HashSet<ListNode> HashTable = new HashSet<>();
    while(head!=null){
        if(hashset.contains(head)){
            return true;
        }
        HashTable.add(head);
        head=head.next;
    }
    return false;
    }
}
TC:O(N)
SC:O(N)
Optimized Approach:
public class Solution {
    public boolean hasCycle(ListNode head) {
        
    if(head==null) return false;
    ListNode slow=head;
    ListNode fast=head;

    while(fast.next!=null && fast.next.next!=null){
        fast=fast.next.next;
        slow=slow.next;
        if(fast==slow){
            return true;
        }
    }
    return false;
    }
}
TC:O(N)
SC:O(1)
